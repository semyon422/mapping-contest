<% local Roles = require("domain.Roles") %>

<%
local function get_role_class(changable, exist)
	if changable and exist then
		return "is-primary"
	elseif changable and not exist then
		return "is-white"
	elseif not changable and exist then
		return "is-dark"
	end
end
%>

<div id="users" hx-select="#users" hx-swap="outerHTML" hx-get hx-trigger="update_users">
	<table
		class="table is-narrow is-hoverable is-fullwidth is-bordered"
		hx-swap="none"
		_="on htmx:afterRequest trigger update_users"
	>
		<thead>
			<tr>
			<th>#</th>
			<th>Name</th>
			<th>discord</th>
			<th colspan="2">Roles</th>
			</tr>
		</thead>
		<tbody>
			<% for _, user in ipairs(users) do %>
				<% local roles_map = {} %>
				<% for _, user_role in ipairs(user.user_roles) do %>
					<% roles_map[user_role.role] = true %>
				<% end %>
				<tr>
					<th><%= user.id %></th>
					<td><a href="/users/<%= user.id %>" hx-boost="false"><%= user.name %></a></td>
					<td><%= user.discord %></td>
					<td>
						<% for i, role_name in ipairs(Roles.list) do %>
							<% local exist = roles_map[role_name] %>
							<% local changable = page:canChangeRole(user, role_name) %>
							<% if not changable and exist then %>
								<span class="tag <%= get_role_class(changable, exist) %>">
									<%= role_name %>
								</span>
							<% end %>
						<% end %>
					</td>
					<td>
						<% for i, role_name in ipairs(Roles.list) do %>
							<% local exist = roles_map[role_name] %>
							<% local changable = page:canChangeRole(user, role_name) %>
							<% if changable then %>
								<a
									href="#"
									class="tag <%= get_role_class(changable, exist) %>"
									hx-<%= exist and "delete" or "put" %>="/users/<%= user.id %>/roles/<%= role_name %>"
								>
									<%= role_name %>
								</a>
							<% end %>
						<% end %>
					</td>
				</tr>
			<% end %>
		</tbody>
	</table>
</div>
