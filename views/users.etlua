<% local Roles = require("domain.Roles") %>

<div id="users" hx-select="#users" hx-swap="outerHTML" hx-get hx-trigger="update_users">
	<table hx-swap="none" _="on htmx:afterRequest trigger update_users">
		<thead>
			<tr>
			<th>#</th>
			<th>Name</th>
			<th>discord</th>
			<th colspan="2">Roles</th>
			</tr>
		</thead>
		<tbody>
			<% for _, user in ipairs(users) do %>
				<% local roles_map = {} %>
				<% for _, user_role in ipairs(user.user_roles) do %>
					<% roles_map[user_role.role] = true %>
				<% end %>
				<tr>
					<th><%= user.id %></th>
					<td><a href="/users/<%= user.id %>" hx-boost="false"><%= user.name %></a></td>
					<td><%= user.discord %></td>
					<td>
						<% for i, role_name in ipairs(Roles.list) do %>
							<% local exist = roles_map[role_name] %>
							<% local usecase_name = exist and "auth.remove_role" or "auth.give_role" %>
							<% local changable = view({role = role_name}):authorize(usecase_name) %>
							<% if not changable and exist then %>
								<code
									class="role_<%= changable and "ch" or "nc" %>_<%= exist and "ex" or "ne" %>"
								>
									<%= role_name %>
								</code>
							<% end %>
						<% end %>
					</td>
					<td>
						<% for i, role_name in ipairs(Roles.list) do %>
							<% local exist = roles_map[role_name] %>
							<% local usecase_name = exist and "auth.remove_role" or "auth.give_role" %>
							<% local changable = view({role = role_name}):authorize(usecase_name) %><% if changable then %>
								<a href="#" class="role_display"
									hx-<%= exist and "delete" or "put" %>="/users/<%= user.id %>/roles/<%= role_name %>"
								>
								<code
									class="role_<%= changable and "ch" or "nc" %>_<%= exist and "ex" or "ne" %>"
								>
									<%= role_name %>
								</code>
								</a>
							<% end %>
						<% end %>
					</td>
				</tr>
			<% end %>
		</tbody>
	</table>
</div>
